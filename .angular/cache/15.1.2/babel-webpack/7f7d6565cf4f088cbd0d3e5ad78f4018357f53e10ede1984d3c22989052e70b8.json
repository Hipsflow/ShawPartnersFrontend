{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppServiceService {\n  constructor(http) {\n    this.http = http;\n    this.pathUsers = 'https://api.github.com/users?since=';\n    this.pathDetails = 'http://localhost:8000api/users/';\n  }\n  listUsers(user_id) {\n    return this.http.get(`${this.pathUsers}${user_id}`).pipe(map(res => res));\n  }\n}\nAppServiceService.ɵfac = function AppServiceService_Factory(t) {\n  return new (t || AppServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nAppServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppServiceService,\n  factory: AppServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAc,MAAM;;;AAKhC,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,cAAS,GAAG,qCAAqC;IACjD,gBAAW,GAAG,iCAAiC;EAEf;EAExCC,SAAS,CAACC,OAAY;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,SAAS,GAAGF,OAAO,EAAE,CAAC,CAACG,IAAI,CAACR,GAAG,CAACS,GAAG,IAAIA,GAAG,CAAC,CAAC;EAC3E;;AATWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAS,SAAjBT,iBAAiB;EAAAU,YAFhB;AAAM","names":["map","AppServiceService","constructor","http","listUsers","user_id","get","pathUsers","pipe","res","factory","providedIn"],"sourceRoot":"","sources":["C:\\Fullstack Web project\\frontend\\src\\app\\services\\app-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, pipe } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServiceService {\n\n  private pathUsers = 'https://api.github.com/users?since='\n  private pathDetails = 'http://localhost:8000api/users/'\n\n  constructor(private http: HttpClient) { }\n\n  listUsers(user_id: any) {\n    return this.http.get(`${this.pathUsers}${user_id}`).pipe(map(res => res));\n  }\n  // userDetails(user_login: any) {\n  //   return this.http.get(`${this.pathDetails}${user_login}/details`).pipe(map(res => res));\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}